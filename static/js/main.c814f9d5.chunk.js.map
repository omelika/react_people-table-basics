{"version":3,"sources":["components/NotFoundPage/NotFoundPage.tsx","components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","api.ts","App.tsx","index.tsx"],"names":["NotFoundPage","className","PersonRow","person","name","sex","born","died","motherName","fatherName","slug","PeopleTable","people","map","PeoplePage","useState","setPeople","useEffect","fetch","then","response","json","peopleFromSever","preparedPeople","personFromServer","mother","find","father","App","to","path","element","ReactDOM","render","document","getElementById"],"mappings":"0NAAaA,EAAyB,kBACpC,oBAAIC,UAAU,QAAd,6B,qBCKK,IAAMC,EAA6B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3C,OACE,qBAAIF,UAAU,SAAd,UACE,6BAAKE,EAAOC,OACZ,6BAAKD,EAAOE,MACZ,6BAAKF,EAAOG,OACZ,6BAAKH,EAAOI,OACZ,6BAAKJ,EAAOK,aACZ,6BAAKL,EAAOM,aACZ,6BAAKN,EAAOO,WCRLC,EAA+B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC7C,OACE,wBAAOX,UAAU,QAAjB,UACE,kCACE,sCACA,qCACA,sCACA,sCACA,4CACA,4CACA,yCAGF,gCACGW,EAAOC,KAAI,SAAAV,GAAM,OAChB,cAAC,EAAD,CAA6BA,OAAQA,GAArBA,EAAOO,eCjBpBI,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOH,EAAP,KAAeI,EAAf,KAoBA,OAlBAC,qBAAU,WCFHC,MAAM,GAAD,OAHE,sEAIXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDEfF,MAAK,SAAAG,GACf,IAAMC,EAAiBD,EAAgBT,KAAI,SAAAW,GACzC,OAAO,YAAC,eACHA,GADL,IAEEC,OAAQH,EACLI,MAAK,SAAAvB,GAAM,OAAIqB,EAAiBhB,aAAeL,EAAOC,SACpD,KACLuB,OAAQL,EACLI,MAAK,SAAAvB,GAAM,OAAIqB,EAAiBf,aAAeN,EAAOC,SACpD,UAITY,EAAUO,QAEX,IAGD,qCACE,oBAAItB,UAAU,QAAd,yBACA,cAAC,EAAD,CAAaW,OAAQA,QEfdgB,G,MAAgB,WAG3B,OACE,sBAAK3B,UAAU,MAAf,UACE,qBAAKA,UAAU,2CAAf,SACE,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAAS4B,GAAG,IAAI5B,UAAU,cAA1B,uBACA,cAAC,IAAD,CAAS4B,GAAG,SAAS5B,UAAU,cAA/B,gCAKN,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6B,KAAK,IAAIC,QAAS,6CACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUF,GAAG,QAC1C,cAAC,IAAD,CAAOC,KAAK,SAASC,QAAS,cAAC,EAAD,MAC9B,cAAC,IAAD,CACED,KAAK,IACLC,QAAS,cAAC,EAAD,cC7BnBC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c814f9d5.chunk.js","sourcesContent":["export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from '../../types/Person';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  return (\n    <tr className=\"Person\">\n      <td>{person.name}</td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{person.motherName}</td>\n      <td>{person.fatherName}</td>\n      <td>{person.slug}</td>\n    </tr>\n  );\n};\n","import { Person } from '../../types/Person';\nimport { PersonRow } from '../PersonRow/PersonRow';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table className=\"table\">\n      <thead>\n        <th>name</th>\n        <th>sex</th>\n        <th>born</th>\n        <th>died</th>\n        <th>fatehrName</th>\n        <th>motherName</th>\n        <th>slug</th>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonRow key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types/Person';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  useEffect(() => {\n    getPeople().then(peopleFromSever => {\n      const preparedPeople = peopleFromSever.map(personFromServer => {\n        return ({\n          ...personFromServer,\n          mother: peopleFromSever\n            .find(person => personFromServer.motherName === person.name)\n            || null,\n          father: peopleFromSever\n            .find(person => personFromServer.fatherName === person.name)\n            || null,\n        });\n      });\n\n      setPeople(preparedPeople);\n    });\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      <PeopleTable people={people} />\n    </>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport function getPeople(): Promise<Person[]> {\n  return fetch(`${API_URL}`)\n    .then(response => response.json());\n}\n","import {\n  Route, Routes, NavLink, Navigate,\n} from 'react-router-dom';\nimport './App.scss';\nimport { NotFoundPage } from './components/NotFoundPage/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nimport 'bulma/css/bulma.css';\n// import '@fortawesome/fontawesome-free/css/all.css';\n\n// interface Status {\n//   isAcvtive: boolean;\n// }\n\nexport const App: React.FC = () => {\n//  const navigate = useNavigate();\n\n  return (\n    <div className=\"App\">\n      <nav className=\"navbar is-fixed-top has-background-light\">\n        <div className=\"navbar-menu\">\n          <div className=\"navbar-start\">\n            <NavLink to=\"/\" className=\"navbar-item\">Home page</NavLink>\n            <NavLink to=\"people\" className=\"navbar-item\">People page</NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <Routes>\n        <Route path=\"/\" element={<h1>Home page</h1>} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"people\" element={<PeoplePage />} />\n        <Route\n          path=\"*\"\n          element={<NotFoundPage />}\n        />\n      </Routes>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}